#-- base --#

set -g default-terminal "screen-256color"
set -g display-time 3000
set -g history-limit 65535
#set -g mouse-select-pane on


#-- bindkeys --#

set -g prefix ^a
unbind ^b
bind a send-prefix

unbind '"'
bind - splitw -v
unbind %
bind | splitw -h

bind k select-pane  -U
bind j select-pane  -D
bind h select-pane  -L
bind l select-pane   -R

bind ^k resize-pane -U 10
bind ^j resize-pane -D 10
bind ^h resize-pane -L 10
bind ^l resize-pane -R 10

bind ^u swap-pane -U
bind ^d swap-pane -D

bind ^e last
bind q killp

bind '~' splitw htop
bind ! splitw ncmpcpp
bind m command-prompt "splitw 'exec man %%'"
bind @ command-prompt "splitw 'exec perldoc -t -f %%'"
bind * command-prompt "splitw 'exec perldoc -t -v %%'"
bind % command-prompt "splitw 'exec perldoc -t %%'"
bind / command-prompt "splitw 'exec ri -T %% | less'"


#下端的状态栏设置方法
# #[]为属性设置修饰后面的符号可以fg-前景色,bg背景色,不写则代表fg,bg一起设置 
# #S 当前session
# #W 当前窗口 
# #I 当前活动串口的序号
# #W 当前窗口
# %Y-%m-%d 设置时间
# #() 括号里面可以填写命令
# 左下角

#-- statusbar --#
#set -g status-right "#[fg=green]#(/usr/bin/uptime)#[default] • #[fg=green]#(cut -d ' ' -f 1-3 /proc/loadavg)#[default]"
#set -g status-right-attr bright
#set -g status-bg black
#set -g status-fg yellow


# 状态栏
# 颜色

set -g status-bg black
set -g status-fg white

# 对齐方式
set-option -g status-justify centre
set-option -g status-left '#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]]'
set-option -g status-left-length 20

# 窗口列表
setw -g automatic-rename on
#默认窗口设置
set-window-option -g window-status-format '#[dim]#I:#[default]#W#[fg=grey,dim]'
# 活动窗口设置 
set-window-option -g window-status-current-format '#[fg=yellow,bold]#I#[fg=blue]:#[fg=yellow]#W#[fg=dim]'

# 右下角
set -g status-right '#[fg=green][#[fg=cyan]%Y-%m-%d#[fg=green]]'

#setw -g window-status-current-attr bright
#setw -g window-status-current-bg red
#setw -g window-status-current-fg white

set -g status-utf8 on
set -g status-interval 1

#set -g visual-activity on
#setw -g monitor-activity on

setw -g automatic-rename on



# vi mode
set -g status-keys vi
setw -g mode-keys vi

# copy mode
# enter copy mode (prefix Escape)
  #bind Escape copy-mode
# paste buffer (prefix Ctrl+p)
  #bind ^p pasteb
# select (v)
bind -t vi-copy v begin-selection
# copy (y)
bind -t vi-copy y copy-selection
